-- phpMyAdmin SQL Dump
-- version 5.2.0
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Waktu pembuatan: 22 Jun 2024 pada 10.29
-- Versi server: 10.4.25-MariaDB
-- Versi PHP: 7.4.30

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `berita`
--

-- --------------------------------------------------------

--
-- Struktur dari tabel `artikel`
--

CREATE TABLE `artikel` (
  `id_artikel` int(11) NOT NULL,
  `judul` varchar(100) NOT NULL,
  `konten` text NOT NULL,
  `ringkasan` text NOT NULL,
  `gambar` varchar(225) NOT NULL,
  `tanggal` date NOT NULL,
  `view` int(11) NOT NULL,
  `id_user` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data untuk tabel `artikel`
--

INSERT INTO `artikel` (`id_artikel`, `judul`, `konten`, `ringkasan`, `gambar`, `tanggal`, `view`, `id_user`) VALUES
(9, 'Tutorial Instaling CodeIgniter 4', '<p>CodeIgniter 4 adalah kerangka kerja pengembangan aplikasi web yang ringan dan efisien, ditulis dalam bahasa pemrograman PHP,Codeigniter 4 adalah sebuah framework PHP yang digunakan untuk mengembangkan aplikasi web12. CodeIgniter tergolong sebuah toolkit yang berguna untuk membantu developer dalam membangun project dalam bahasa PHP.</p><p><br></p><p>1. Cara Mendownload aplikasi CodeIgniter</p><p>- Untuk mengunduh CodeIgniter 4, pertama-tama kunjungi situs resmi CodeIgniter di codeigniter.com kita bisa buka di chroom ataupun google.</p><p><br></p><p><img src=\"http://localhost:8080/uploads/berkas/1719028796_2821453f8c40aa5fca9f.png\" style=\"width: 50%;\"><br></p><p><br></p><p>- Setelah berada di halaman utama, navigasikan ke bagian unduhan atau cari tautan \"Download\". Klik tautan tersebut, lalu kita akan diarahkan ke halaman unduhan di GitHub.&nbsp;</p><p>- Di sana, pilih versi terbaru dari CodeIgniter 4 dan klik tombol \"Download\" untuk mengunduh file zip.&nbsp;</p><p>- Setelah unduhan selesai, ekstrak file zip tersebut ke direktori pilihan kita di komputer, setelah itu salin file yang sudah di zip dan masukkan kedalam folder root yang berada di file htdocs.</p><p>- lalu ubah nama folder tersebut sesuai yang kita inginkan misalkan ci4web</p><p>- lalu kita coba, kita klik chroom kita ketik folder yang kita buat tadi, misalkan localhost/ci4web klik enter lalu tampilan akan muncul seperti di bawah ini.</p><p><img src=\"http://localhost:8080/uploads/berkas/1719028886_b4627a0a82fc8bd0487d.png\" style=\"width: 50%;\"></p><p><br></p><p><br></p><p>2. Instal menggunakan composser</p><p></p><p>Composer adalah program aplikasi package manager yang digunakan memanajemen projek php, atau sebuah tools dependency untuk manajemen bahasa pemograman php. Berikut ini adalah cara bagaimana menginstall ci4 menggunakan composer</p><p>- download composer terlebih dahulu di laptop kalian</p><p>- sebelum itu kalian pastikan terlebih dahulu koneksi internet kalian itu berjalan dengan baik, karna menginstall composer ini menggunakan internet</p><p>- setelah itu kalian buka website atau link composer yaitu <u>https://getcomposer.org/download/</u></p><p>- setelah sudah di instal, kalian masukkan file php kalian kedalam composer tersebut, setelah suda dimasukkan tamplan akan muncul seperti dibawah ini</p><p><img src=\"http://localhost:8080/uploads/berkas/1719029320_4e3946da02916b01eb43.png\" style=\"width: 50%;\"><img src=\"http://localhost:8080/uploads/berkas/1719029332_eae98bf1c08058647233.png\" style=\"width: 50%;\"></p><p><br></p><p>- Lalu setelah itu kita buka CMD lalu kita ketik composer -v jika berhasil tampilan akan seperti dibawah ini</p><div><img src=\"http://localhost:8080/uploads/berkas/1719029397_31fb2ca4b3700685038d.png\" style=\"width: 50%;\"></div><div><br></div><div><div>- selanjutya install ci4 menggunakan composer</div><div>- klik tombol shift dan klik kanan pada file Codeigniter yang telah kalian download, lalu ubah nama codeigniter menjadi codeigniter4, pastikan bahwa url atau link yang digunakan dalam perintah dan di komputer sama.</div></div><div><br></div><div><img src=\"http://localhost:8080/uploads/berkas/1719029622_b8cbb8cade2bef49db82.png\" style=\"width: 50%;\"></div><div><br></div><div><div>- setelah itu kita klik cmd lagi, lalu ketik composer install tunggu sampai proses nya selesai</div><div>- jika sudah selesai ketik PHP SPARK SERVE di cmd kalian</div><div><br></div><div><img src=\"http://localhost:8080/uploads/berkas/1719029682_728e283442995a5924d3.png\" style=\"width: 50%;\"></div><div><br></div><div><div>- Jika sudah selesai selanjutnya kita buka google atau chroom kita keik http://localhost:8080 dan jika berhasil tampilan akan&nbsp; seperti dibawah ini</div></div></div><div><br></div><div><img src=\"http://localhost:8080/uploads/berkas/1719029723_4b7134169b0e44dcfab1.png\" style=\"width: 50%;\"><br></div><p><br></p><div><br></div><p><br></p>', 'Tutorial cara menginstal CodeIgniter 4 menggunakan composer untuk para pemula', '1719029885_e727a6aa01bb3c76b66b.png', '2024-06-22', 2, 5),
(12, 'Tutorial Cara Memasukan ci4 ke Koneksi Database', '<p>CodeIgniter 4 (CI4) adalah framework PHP yang ringan dan kuat yang menyediakan alat untuk membangun aplikasi web dengan cepat dan efisien. Salah satu fitur penting dari aplikasi web adalah kemampuannya untuk berinteraksi dengan basis data. Dengan CI4, Anda dapat dengan mudah menghubungkan aplikasi Anda ke berbagai jenis basis data, seperti MySQL, PostgreSQL, SQLite, dan lainnya.</p><p><br>1.Langkah pertama untuk menghubungkan CI4 ke database adalah dengan mengkonfigurasi koneksi database di file terlebih dahulu:<br>-Masuk ke file env yang sudah kita buat<br>-klik kanan lalu klik open gith base here<br>&nbsp;<img style=\"width: 50%;\" src=\"http://localhost:8080/uploads/berkas/1719035975_49f6d09e0fcaffce1c6e.jpeg\"></p><p>Dengan menggunakan model, Anda dapat mengambil, menyimpan, memperbarui, dan menghapus data dari basis data dengan mudah. CI4 juga menyediakan Query Builder yang kuat, yang memungkinkan Anda membuat kueri basis data menggunakan sintaks yang lebih ekspresif dan aman dibandingkan dengan kueri langsung SQL. Ini membantu mencegah serangan SQL injection dan memudahkan pemeliharaan kode.<br>Setelah konfigurasi database selesai, pastikan untuk memuat library database secara otomatis dalam file app/Config/Autoload.php. Ini memastikan bahwa kelas-kelas yang diperlukan untuk koneksi database dimuat secara otomatis ketika aplikasi dimulai.<br></p><p><br>Selanjutnya, jika Anda ingin berinteraksi dengan database melalui model, Anda perlu membuat model untuk setiap tabel yang akan Anda gunakan. Anda dapat membuat model baru dengan menjalankan perintah CLI CodeIgniter, atau secara manual. Model ini berfungsi sebagai penghubung antara aplikasi Anda dan basis data, memungkinkan Anda untuk melakukan operasi seperti insert, update, delete, dan select dengan mudah.</p><p><br>Terakhir, Anda dapat menggunakan koneksi database Anda dalam aplikasi Anda, baik melalui model atau secara langsung di dalam controller. Anda dapat menjalankan query SQL langsung atau menggunakan metode yang disediakan oleh CI4 untuk melakukan operasi database. Pastikan untuk memeriksa dokumentasi resmi CI4 untuk memahami lebih lanjut tentang cara menggunakan model dan operasi database yang didukung.<br>Dengan mengikuti langkah-langkah ini, Anda akan berhasil menghubungkan CodeIgniter 4 ke koneksi database Anda dan siap untuk membangun aplikasi web yang kuat dan dinamis.</p><p>Selain itu, CI4 memiliki dukungan yang kuat untuk transaksi basis data, validasi data, dan relasi basis data. Ini memungkinkan Anda untuk mengelola data Anda dengan lebih efisien dan aman. Dengan menggunakan CI4, Anda dapat membangun aplikasi web yang tangguh dan andal dengan cepat dan mudah.<br>Dengan demikian, menghubungkan CI4 ke database adalah langkah penting dalam pengembangan aplikasi web dengan CI4. Dengan mengikuti langkah-langkah yang tepat dan memanfaatkan fitur-fitur kuat dari CI4, Anda dapat dengan mudah mengintegrasikan aplikasi Anda dengan berbagai jenis basis data dan membangun aplikasi web yang kuat dan efisien.<br><br><br><br><br></p><p><br></p><p><br></p>', 'CodeIgniter 4 (CI4) adalah framework PHP yang ringan dan kuat yang menyediakan alat untuk membangun aplikasi web dengan cepat dan efisien. Salah satu fitur penting dari aplikasi web adalah kemampuannya untuk berinteraksi dengan basis data. Dengan CI4, Anda dapat dengan mudah menghubungkan aplikasi Anda ke berbagai jenis basis data, seperti MySQL, PostgreSQL, SQLite, dan lainnya.', '1719036126_71e40baea0fe1fe472d6.jpeg', '2024-06-22', 1, 6),
(13, 'Langkah-langkah Membuat Query Builder dengan CodeIgniter 4', '<p><b>Pengertian Query Builder</b></p><p><b>Query Builder</b> adalah alat atau pustaka yang membantu pengguna membuat dan menjalankan query (perintah) SQL dengan cara yang lebih mudah dan intuitif. Query Builder sering digunakan dalam pengembangan aplikasi berbasis database untuk membuat operasi CRUD (Create, Read, Update, Delete) lebih mudah dilakukan tanpa perlu menulis kode SQL mentah.</p><p><br></p><p>jika ingin membuat Query Builder menggunakan CodeIgniter 4 (CI4), framework PHP yang populer, berikut adalah langkah-langkah untuk membuatnya:</p><p><b>1. Instalasi CodeIgniter 4:</b></p><p>Download CodeIgniter 4,&nbsp;<span style=\"font-size: 0.875rem; font-weight: initial;\">Anda dapat mendownload CodeIgniter 4 dari situs resmi CodeIgniter atau menggunakan Composer.</span></p><p><img src=\"http://localhost:8080/uploads/berkas/1719039184_69a937ed6a0cd53080f2.jpeg\" style=\"width: 50%;\"><span style=\"font-size: 0.875rem; font-weight: initial;\"><br></span></p><p><br></p><p>Konfigurasi Environment: Salin file .env dan sesuaikan dengan konfigurasi database Anda.</p><div><img src=\"http://localhost:8080/uploads/berkas/1719039209_ca46f3b70b5e3226a53e.jpeg\" style=\"width: 50%;\"><br></div><div><br></div><div><div>Edit .env dan sesuaikan konfigurasi database:</div><div><img src=\"http://localhost:8080/uploads/berkas/1719039249_945eaba6de4906c33934.jpeg\" style=\"width: 50%;\"></div><div><br></div><div><div><b>2. Membuat Struktur Proyek:</b></div><div>Buat controller dan view yang diperlukan untuk Query Builder.</div><div><br></div><div><b>3. Membuat Model:</b></div><div>Buat model untuk tabel yang akan digunakan. Misalnya, buat model untuk tabel users.</div><div>Buat file app/Models/UserModel.php:</div></div></div><div><img src=\"http://localhost:8080/uploads/berkas/1719039308_dfbe718ec79fbeee42db.jpeg\" style=\"width: 50%;\"></div><div><br></div><div><div><b>4. Membuat Controller:</b></div><div>Buat controller untuk mengelola query builder. Buat file app/Controllers/QueryBuilder.php:</div></div><div><img src=\"http://localhost:8080/uploads/berkas/1719039330_da41044568135872d397.jpeg\" style=\"width: 50%;\"></div><div><br></div><div><div><img src=\"http://localhost:8080/uploads/berkas/1719039356_088ad862a64065c3b0a2.jpeg\" style=\"font-size: 1rem; font-weight: initial; width: 50%;\"><br></div><div><br></div><div><div><div><b>5. Membuat View:</b></div><div>Buat view untuk menerima input query dan menampilkan hasilnya. Buat file app/Views/query_builder.php:</div></div></div></div><div><img src=\"http://localhost:8080/uploads/berkas/1719039532_3e6e6339b7318a7da5a0.jpeg\" style=\"width: 50%;\"><br></div><div><br></div><div><img src=\"http://localhost:8080/uploads/berkas/1719039550_3fc01820de9060fdf6d0.jpeg\" style=\"width: 50%;\"></div><div><br></div><div><div><b>6.Mengatur Routes:</b></div><div>Tambahkan route untuk Query Builder di app/Config/Routes.php:</div><div><img src=\"http://localhost:8080/uploads/berkas/1719039588_b9188cdb7112ba2c94b0.jpeg\" style=\"width: 50%;\"></div><div><b><br></b></div><div><div><b>7. Menjalankan Aplikasi:</b></div><div>Jalankan aplikasi dengan perintah berikut:</div></div></div><div><img src=\"http://localhost:8080/uploads/berkas/1719039623_0229102906a16582949d.jpeg\" style=\"width: 50%;\"></div><div><br></div><div><div>Aplikasi ini akan berjalan di http://localhost:8080/. Anda bisa mengakses halaman utama untuk memasukkan dan menjalankan query SQL.</div><div><br></div><div><b>KESIMPULAN :</b>&nbsp;Query builder adalah alat yang memungkinkan pengguna untuk membuat kueri database tanpa perlu menulis perintah SQL secara langsung. Ini sangat berguna bagi pengembang dan analis data karena memungkinkan mereka untuk dengan cepat membangun kueri yang kompleks dan tepat sesuai dengan kebutuhan mereka. Dengan menggunakan antarmuka grafis atau formulir, pengguna dapat memilih tabel, kolom, kriteria pencarian, dan urutan hasil yang diinginkan. Kelebihan utamanya adalah mengurangi kesalahan sintaksis dan mempercepat proses pengembangan aplikasi atau analisis data. Namun, pengguna harus memahami struktur database mereka dan logika kueri untuk menghasilkan hasil yang diinginkan. Secara keseluruhan, query builder adalah alat yang kuat untuk meningkatkan produktivitas dan akurasi dalam mengakses dan memanipulasi data dalam database.</div><div><br></div><div><br></div></div>', 'Bagaimana Cara Membuat Query Builder Dengan CodeIgniter 4', '1719039829_136b312600bd22fcd164.jpeg', '2024-06-22', 2, 7),
(14, 'Helper dan Plugin codeigniter 4', '<p>&nbsp;1. Helper: Mempermudah Pengembangan dengan Helper di CodeIgniter</p><p>&nbsp; &nbsp; Helper (Pembantu): CodeIgniter menyediakan banyak helper functions yang membantu dalam mempermudah pengembangan, seperti fungsi-fungsi untuk manipulasi string, manipulasi URL, pembuatan form, manipulasi file, dan sebagainya. Helper-functions ini dapat digunakan di seluruh aplikasi untuk melakukan tugas-tugas umum dengan mudah tanpa harus menulis ulang kode yang sama.</p><div><div>Dalam pengembangan aplikasi web menggunakan framework PHP seperti CodeIgniter, penggunaan helper functions memiliki peran yang sangat penting. Helper functions ini dirancang untuk mempermudah tugas-tugas umum dalam pengembangan, seperti manipulasi string, pembuatan form, pengolahan URL, dan banyak lagi. Dengan adanya helper functions ini, pengembang dapat menghemat waktu dan usaha dalam menulis kode yang sama berulang-ulang. CodeIgniter menyediakan berbagai helper functions bawaan yang siap digunakan di seluruh aplikasi, memungkinkan pengembangan menjadi lebih efisien dan produktif.</div><div>Helper Functions</div><div><br></div><div><div>•<span style=\"white-space:pre\">	</span>Loading a Helper</div><div><span style=\"white-space:pre\">	</span>$this-&gt;load-&gt;helper(\'name\');</div><div><span style=\"white-space:pre\">	</span>$this-&gt;load-&gt;helper( array(\'helper1\', \'helper2\', \'helper3\') );</div><div><img src=\"http://localhost:8080/uploads/berkas/1719040998_57fc029615bdd5f99311.png\" style=\"width: 50%;\"></div><div><br></div><div><div>2. Plugins: Membangun Fungsionalitas Tambahan di CodeIgniter</div><div><br></div><div>&nbsp;Plugins (Pengaya): CodeIgniter tidak memiliki konsep plugins secara langsung seperti beberapa framework lain (seperti WordPress yang memiliki konsep plugins yang khusus). Namun, pengayaan fungsionalitas bisa dilakukan dengan cara menggunakan library atau membangun modul-modul tambahan (dalam bentuk library atau package) yang memperluas fungsionalitas framework sesuai kebutuhan aplikasi.</div><div><br></div><div>Pengayaan fungsionalitas dalam pengembangan aplikasi menggunakan CodeIgniter dapat dilakukan melalui berbagai cara. Meskipun CodeIgniter tidak memiliki konsep plugins yang sama seperti beberapa framework lain, pengembang dapat membangun fungsionalitas tambahan dalam bentuk library atau package. Hal ini memungkinkan untuk menyesuaikan aplikasi dengan kebutuhan spesifik tanpa harus merombak atau memodifikasi kode inti framework. Dengan pendekatan ini, CodeIgniter memberikan fleksibilitas yang cukup besar dalam membangun aplikasi yang sesuai dengan kebutuhan pengguna.</div><div><br></div><div><div>Loading Plugins</div><div>•<span style=\"white-space:pre\">	</span>$this-&gt;load-&gt;plugin(\'name\');</div><div>•<span style=\"white-space:pre\">	</span>$this-&gt;load-&gt;plugin( array(\'plugin1\', \'plugin2\', \'plugin3\') );</div><div><img src=\"http://localhost:8080/uploads/berkas/1719041174_855d4934cf3e173e68ed.png\" style=\"width: 50%;\"><br></div></div></div></div></div><div><br></div><div><br></div>', 'Helper di CodeIgniter 4 adalah kumpulan fungsi yang membantu menyelesaikan tugas tertentu. Fungsi-fungsi ini biasanya berdiri sendiri dan tidak bergantung pada keadaan atau status aplikasi. ', '1719041231_61f2bb5c11194ed275f7.png', '2024-06-22', 1, 1),
(15, 'Query Result & Query Builders', '<p><b>1. Query Results<br></b>&nbsp; &nbsp;&nbsp;Dalam CodeIgniter 4, \"query result\" merujuk pada hasil yang diperoleh setelah menjalankan query database. Ketika Anda melakukan query terhadap database, hasilnya biasanya berupa satu atau beberapa baris data. CodeIgniter menyediakan berbagai metode untuk mengakses hasil query tersebut dalam berbagai format, seperti objek, array asosiatif, atau baris tunggal.</p><p><b>• result()</b><br>Metode ini mengembalikan hasil kueri sebagai array objek, atau array kosong saat gagal. Biasanya Anda akan menggunakan ini dalam loop foreach, seperti ini:</p><blockquote class=\"blockquote\">$query = $this-&gt;db-&gt;query(\"YOUR QUERY\");<br>foreach ($query-&gt;result() as $row)<br>{<br>&nbsp; &nbsp; &nbsp; &nbsp; echo $row-&gt;title;<br>&nbsp; &nbsp; &nbsp; &nbsp; echo $row-&gt;name;<br>&nbsp; &nbsp; &nbsp; &nbsp; echo $row-&gt;body;<br>}</blockquote><p><font color=\"#000000\" style=\"background-color: rgb(255, 255, 0);\">foreach ($query-&gt;result() as $row)</font> - Ini adalah loop foreach yang mengambil hasil dari query dalam bentuk objek. Metode result() digunakan untuk mengambil hasil query dalam bentuk objek baris.<br>Metode di atas adalah alias dari result_object().</p><p><br><h6>Misal, databasenya seperti berikut:</h6></p><table class=\"table table-bordered\"><tbody><tr><td><font color=\"#1f1f1f\"><span style=\"text-wrap: wrap;\">Tittle</span></font></td><td>Name</td><td>Body</td></tr><tr><td><span style=\"color: rgb(31, 31, 31); text-wrap: wrap;\">Post 1 Title</span><br></td><td><span style=\"color: rgb(31, 31, 31); text-wrap: wrap;\">John Doe</span><br></td><td><span style=\"color: rgb(31, 31, 31); text-wrap: wrap;\">This is the body of the first post.</span><br></td></tr><tr><td><span style=\"color: rgb(31, 31, 31); text-wrap: wrap;\">Another Title</span><br></td><td><span style=\"color: rgb(31, 31, 31); text-wrap: wrap;\">Jane Smith</span><br></td><td><span style=\"color: rgb(31, 31, 31); text-wrap: wrap;\">Here\'s the body for another post.</span><br></td></tr><tr><td><span style=\"color: rgb(31, 31, 31); text-wrap: wrap;\">New Post</span><br></td><td><span style=\"color: rgb(31, 31, 31); text-wrap: wrap;\">Michael Brown</span><br></td><td><span style=\"color: rgb(31, 31, 31); text-wrap: wrap;\">This is a new post with some content.</span><br></td></tr></tbody></table><p><br></p><h6>Contoh penggunaan:</h6><blockquote class=\"blockquote\">$query = $this-&gt;db-&gt;query(\"SELECT title, name, body FROM your_table\");<br>foreach ($query-&gt;result() as $row)<br>{<br>&nbsp; &nbsp; echo $row-&gt;title;<br>&nbsp; &nbsp; echo $row-&gt;name;<br>&nbsp; &nbsp; echo $row-&gt;body;<br>}</blockquote><h6>Outputnya:</h6><p>Post 1 Title</p><p>John Doe</p><p>This is the body of the first post.</p><p><br></p><p>Another Title</p><p>Jane Smith</p><p>Here\'s the body for another post.</p><p><br></p><p>New Post</p><p>Michael Brown</p><p>This is a new post with some content.</p><p><br></p><h6>• result_array()</h6><p>Metode ini mengembalikan hasil kueri sebagai array murni, atau array kosong saat tidak ada hasil yang dihasilkan. Biasanya Anda akan menggunakan ini dalam loop foreach, seperti ini:</p><blockquote class=\"blockquote\">$query = $this-&gt;db-&gt;query(\"YOUR QUERY\");<br>foreach ($query-&gt;result_array() as $row)<br>{<br>&nbsp; &nbsp; &nbsp; &nbsp; echo $row[\'title\'];<br>&nbsp; &nbsp; &nbsp; &nbsp; echo $row[\'name\'];<br>&nbsp; &nbsp; &nbsp; &nbsp; echo $row[\'body\'];<br>}</blockquote><p><br></p><h6>Contoh penggunaan:</h6><blockquote class=\"blockquote\">$query = $this-&gt;db-&gt;query(\"SELECT title, name, body FROM posts\");<br>foreach ($query-&gt;result_array() as $row)<br>{<br>&nbsp; &nbsp; echo $row[\'title\'] . \"&lt;br&gt;\";<br>&nbsp; &nbsp; echo $row[\'name\'] . \"&lt;br&gt;\";<br>&nbsp; &nbsp; echo $row[\'body\'] . \"&lt;br&gt;&lt;br&gt;\";<br>}</blockquote><p><font color=\"#000000\" style=\"background-color: rgb(255, 255, 0);\">foreach ($query-&gt;result_array() as $row) </font>- Ini adalah loop foreach yang mengambil hasil dari query dalam bentuk array asosiatif. Metode result_array() digunakan untuk mengambil hasil query dalam bentuk array asosiatif, di mana nama kolom dari hasil query menjadi kunci (key) dalam array.</p><p><br></p><h6>• row()</h6><p>Metode ini mengembalikan satu baris hasil. Jika query Anda memiliki lebih dari satu baris, query hanya mengembalikan baris pertama. Hasilnya dikembalikan sebagai objek. Berikut adalah contoh penggunaan:</p><blockquote class=\"blockquote\">$query = $this-&gt;db-&gt;query(\"YOUR QUERY\");<br>$row = $query-&gt;row();<br>if (isset($row))<br>{<br>&nbsp; &nbsp; &nbsp; &nbsp; echo $row-&gt;title;<br>&nbsp; &nbsp; &nbsp; &nbsp; echo $row-&gt;name;<br>&nbsp; &nbsp; &nbsp; &nbsp; echo $row-&gt;body;<br>}</blockquote><p>Setelah menjalankan query, row() digunakan untuk mengambil satu baris hasil dari query tersebut. Jika query menghasilkan lebih dari satu baris, row() akan mengembalikan hanya baris pertama. Jika tidak ada hasil yang ditemukan, $row akan bernilai NULL.</p><p><br></p><h6>Contoh:</h6><blockquote class=\"blockquote\">$query = $this-&gt;db-&gt;query(\"SELECT title, name, body FROM posts\");<br>$row = $query-&gt;row();<br>if (isset($row))<br>{<br>&nbsp; &nbsp; echo $row-&gt;title;<br>&nbsp; &nbsp; echo $row-&gt;name;<br>&nbsp; &nbsp; echo $row-&gt;body;<br>}</blockquote><h6>Outputnya:</h6><p>Post 1 Title</p><p>John Doe</p><p>This is the body of the first post.</p><p><br></p><p>Jika Anda ingin baris tertentu dikembalikan, Anda dapat mengirimkan nomor baris sebagai digit di parameter pertama:</p><blockquote class=\"blockquote\">$row = $query-&gt;row(5);</blockquote><p>Jika Anda menggunakan $query-&gt;row(5); dalam CodeIgniter 4, itu berarti Anda mencoba mengambil baris ke-5 dari hasil query yang dijalankan.</p><p><br></p><h6>• row_array()</h6><p>Identik dengan metode row() di atas, kecuali mengembalikan array. Contoh:</p><blockquote class=\"blockquote\">$query = $this-&gt;db-&gt;query(\"YOUR QUERY\");<br>$row = $query-&gt;row_array();<br>if (isset($row))<br>{<br>&nbsp; &nbsp; &nbsp; &nbsp; echo $row[\'title\'];<br>&nbsp; &nbsp; &nbsp; &nbsp; echo $row[\'name\'];<br>&nbsp; &nbsp; &nbsp; &nbsp; echo $row[\'body\'];<br>}</blockquote><p>Setelah menjalankan query, row_array() digunakan untuk mengambil satu baris hasil dari query dalam bentuk array asosiatif. Ini berarti setiap kolom dari hasil query akan diakses menggunakan kunci (key) nama kolomnya.</p><p><br></p><div><div><b>2. Query Builder Class (Active Record Class)</b></div><div>&nbsp; &nbsp; CodeIgniter memberi Anda akses ke kelas Query Builder. Pola ini memungkinkan informasi diambil, dimasukkan, dan diperbarui dalam database Anda dengan skrip minimal. Dalam beberapa kasus hanya satu atau dua baris kode yang diperlukan untuk melakukan tindakan database. CodeIgniter tidak mengharuskan setiap tabel database menjadi file kelasnya sendiri. Ini malah menyediakan antarmuka yang lebih disederhanakan.</div></div><div><br></div><div><h6>• $this-&gt;db-&gt;get()</h6><div>Menjalankan kueri pemilihan dan mengembalikan hasilnya. Dapat digunakan dengan sendirinya untuk mengambil semua catatan dari tabel:</div><blockquote class=\"blockquote\">$query = $this-&gt;db-&gt;get(\'mytable\');&nbsp; // Produces: SELECT * FROM mytable</blockquote><div><br></div><h6>Contoh:</h6><blockquote class=\"blockquote\">// Mengambil data dari tabel \'mytable\'<br>$query = $this-&gt;db-&gt;get(\'mytable\');<br>// Memeriksa apakah ada baris data yang ditemukan<br>if ($query-&gt;getNumRows() &gt; 0) {<br>&nbsp; &nbsp; // Mengiterasi hasil query<br>&nbsp; &nbsp; foreach ($query-&gt;getResult() as $row) {<br>&nbsp; &nbsp; &nbsp; &nbsp; echo $row-&gt;title . \"&lt;br&gt;\";<br>&nbsp; &nbsp; &nbsp; &nbsp; echo $row-&gt;description . \"&lt;br&gt;&lt;br&gt;\";<br>&nbsp; &nbsp; }<br>} else {<br>&nbsp; &nbsp; echo \"No data found.\";<br>}</blockquote><h6>Output:</h6><div>Post 1</div><div>Description of Post 1</div><div><br></div><div>Another Post</div><div>Description of Another Post</div><div><br></div><div>Third Post</div><div>Description of the Third Post</div><div><br></div><div><h6>• $this-&gt;db-&gt;get_where()</h6><div>Metode dari library database ($this-&gt;db) di CodeIgniter 4 yang digunakan untuk mengambil data dari tabel mytable dengan kondisi tertentu. Ini memungkinkan Anda untuk menambahkan klausa \"where\" di parameter kedua, alih-alih menggunakan fungsi db-&gt;where():</div><blockquote class=\"blockquote\">$query = $this-&gt;db-&gt;get_where(\'mytable\', array(\'id\' =&gt; $id), $limit, $offset);</blockquote><h6>Contoh:</h6><blockquote class=\"blockquote\">$id = 2;<br>$limit = 2;<br>$offset = 0;<br>$query = $this-&gt;db-&gt;get_where(\'mytable\', array(\'id\' =&gt; $id), $limit, $offset);<br>foreach ($query-&gt;getResult() as $row) {<br>&nbsp; &nbsp; echo $row-&gt;title . \"&lt;br&gt;\";<br>&nbsp; &nbsp; echo $row-&gt;description . \"&lt;br&gt;&lt;br&gt;\";<br>}</blockquote><h6>Output:</h6><div>Another Post</div><div>Description of Another Post</div><div><br></div><div>Third Post</div><div>Description of the Third Post</div><div><br></div><div><h6>• $this-&gt;db-&gt;select()</h6><div>Memungkinkan Anda untuk menulis bagian SELECT dari kueri Anda:</div><blockquote class=\"blockquote\">$this-&gt;db-&gt;select(\'title, content, date\');<br>$query = $this-&gt;db-&gt;get(\'mytable\');</blockquote><div><span style=\"white-space: normal;\">Metode select() digunakan untuk menentukan kolom-kolom yang ingin Anda ambil dari tabel. Dalam contoh ini, Anda memilih kolom title, content, dan date.</span></div><div><span style=\"white-space: normal;\"><br></span></div><h6>Contoh:</h6><blockquote class=\"blockquote\">$this-&gt;db-&gt;select(\'title, content, date\');<br>$query = $this-&gt;db-&gt;get(\'mytable\');<br>foreach ($query-&gt;getResult() as $row) {<br>&nbsp; &nbsp; echo $row-&gt;title . \"&lt;br&gt;\";<br>&nbsp; &nbsp; echo $row-&gt;content . \"&lt;br&gt;\";<br>&nbsp; &nbsp; echo $row-&gt;date . \"&lt;br&gt;&lt;br&gt;\";<br>}</blockquote></div><div><h6><span style=\"font-size: 1rem; font-weight: initial;\">Output:</span></h6><div>Post 1</div><div>Content of Post 1</div><div>2023-01-01</div><div><br></div><div>Post 2</div><div>Content of Post 2</div><div>2023-02-01</div><div><br></div><div>Post 3</div><div>Content of Post 3</div><div>2023-03-01</div><div><br></div><div><h6>• $this-&gt;db-&gt;insert()</h6><div>Menghasilkan insert string berdasarkan data yang Anda berikan, dan menjalankan query. Anda dapat meneruskan array atau objek ke fungsi. Berikut adalah contoh menggunakan array:</div><blockquote class=\"blockquote\">$data = array(<br>&nbsp; &nbsp; &nbsp; &nbsp; \'title\' =&gt; \'My title\',<br>&nbsp; &nbsp; &nbsp; &nbsp; \'name\' =&gt; \'My Name\',<br>&nbsp; &nbsp; &nbsp; &nbsp; \'date\' =&gt; \'My date\'<br>);<br>$this-&gt;db-&gt;insert(\'mytable\', $data);</blockquote><div>Array $data ini berisi pasangan kunci-nilai yang akan dimasukkan ke dalam tabel database.</div><div>Metode insert() digunakan untuk menyisipkan data baru ke dalam tabel mytable.</div></div></div></div><div><br></div><div><h6>• $this-&gt;db-&gt;set()</h6><div>Fungsi ini memungkinkan Anda menetapkan nilai untuk inserts atau updates.</div><blockquote class=\"blockquote\">$this-&gt;db-&gt;set(\'name\', $name);<br>$this-&gt;db-&gt;insert(\'mytable\');</blockquote><div>Metode set() digunakan untuk menentukan nilai dari kolom tertentu sebelum melakukan operasi database (dalam hal ini, operasi insert).</div><div><br></div><h6>Contoh:</h6><blockquote class=\"blockquote\">$name = \'My Name\';<br>$this-&gt;db-&gt;set(\'name\', $name);<br>$this-&gt;db-&gt;insert(\'mytable\');</blockquote><div>Setelah kode di atas dijalankan, baris baru akan ditambahkan ke tabel mytable dengan nilai yang ditentukan untuk kolom name.</div><div><br></div><div><h6>• $this-&gt;db-&gt;delete()</h6><div>Menghasilkan string SQL hapus dan menjalankan kueri.</div><blockquote class=\"blockquote\">$this-&gt;db-&gt;delete(\'mytable\', array(\'id\' =&gt; $id));</blockquote><h6>Contoh:</h6><blockquote class=\"blockquote\">$id = 3;<br>$this-&gt;db-&gt;delete(\'mytable\', array(\'id\' =&gt; $id));</blockquote><div>Setelah kode di atas dijalankan, baris data yang memiliki nilai id sama dengan 3 akan dihapus dari tabel mytable.</div><div><br></div><div><h6>• $this-&gt;db-&gt;empty_table()</h6><div>Menghasilkan string SQL hapus dan menjalankan kueri.:</div><blockquote class=\"blockquote\">$this-&gt;db-&gt;empty_table(\'mytable\');</blockquote><div>Metode empty_table() digunakan untuk menghapus semua data dari tabel yang ditentukan.</div><div>Metode ini tidak menghapus struktur tabel atau kolomnya; hanya menghapus semua baris data di dalam tabel tersebut.</div></div><div><br></div><div><br></div></div></div><div><br></div><div><br></div></div>', 'Membahas mengenai pemakaian Query Result dan Query Builders pada CodeIgniter 4', '1719044888_7440f9798591a89c913c.png', '2024-06-22', 1, 2);

-- --------------------------------------------------------

--
-- Struktur dari tabel `user`
--

CREATE TABLE `user` (
  `id_user` int(11) NOT NULL,
  `username` varchar(100) NOT NULL,
  `password` varchar(100) NOT NULL,
  `name` varchar(100) NOT NULL,
  `email` varchar(100) NOT NULL,
  `hak_akses` int(2) NOT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data untuk tabel `user`
--

INSERT INTO `user` (`id_user`, `username`, `password`, `name`, `email`, `hak_akses`, `created_at`, `updated_at`) VALUES
(1, 'Renal', '$2a$12$PlnLT8eiHZMGuobd0bGW7Oi9vmeZM.qwfaz/PNYcihCvY.ayRawKO', 'Renaldi Muhammad Fauzi', 'tes@gmail.com', 1, '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(2, 'Bayu', '$2y$10$7PmRCatf60xCv5Q3d/TTPeYw6ORy9d5K/IMOaTEnAS5EXAHz5daAK', 'Bayu Sebastian', 'sebastianbayu01@gmail.com', 1, '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(5, 'Friska', '$2y$10$rtr.2Y./1SIjcSdJ1MDYlu/t8rMmKPHwZ3K7QS6rHfjGSgp/8aCOS', 'Friska Sasti', 'friskasasti28@gmail.com', 2, '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(6, 'Syifa', '$2y$10$0lqogzWZW6JDe8AqtZZvOO9evVyLEF0YPRylRQ9kNujzlOqpKC7j6', 'Siti Nursyifa', 'nursyifa1234@gmail.com', 2, '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(7, 'Meli', '$2y$10$buwoYyOdBcsrQXDQ6t2F6O0gctQzqEv.2luNYtFwiuoHBOGPRnw0.', 'Meli Anggraeni', 'meli@gmail.com', 2, '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(8, 'Iqbal', '$2y$10$pmucxtS8nVRnEvGMaUvlT.Ikrc3BK4VE5aEJuZVPj.QOLltL4iRvu', 'Muhammad Iqbal Saputra', 'iqbal@gmail.com', 2, '0000-00-00 00:00:00', '0000-00-00 00:00:00');

--
-- Indexes for dumped tables
--

--
-- Indeks untuk tabel `artikel`
--
ALTER TABLE `artikel`
  ADD PRIMARY KEY (`id_artikel`);

--
-- Indeks untuk tabel `user`
--
ALTER TABLE `user`
  ADD PRIMARY KEY (`id_user`);

--
-- AUTO_INCREMENT untuk tabel yang dibuang
--

--
-- AUTO_INCREMENT untuk tabel `artikel`
--
ALTER TABLE `artikel`
  MODIFY `id_artikel` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=16;

--
-- AUTO_INCREMENT untuk tabel `user`
--
ALTER TABLE `user`
  MODIFY `id_user` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
